( Cube3d: Just a cube, y'know )

|00 @System &vector $2 &wst $1 &rst $1 &eaddr $2 &ecode $1 &pad $1 &r $2 &g $2 &b $2 &debug $1 &halt $1
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1
|000

	@cube &v0 $8 &v4 $8
	@center &x $2 &y $2
	@timer $1

|100

@on-reset ( -> )
	( | theme )
	#4fcd .System/r DEO2
	#4fc3 .System/g DEO2
	#dfc2 .System/b DEO2
	( | center )
	.Screen/width DEI2 #01 SFT2 #0040 SUB2 .center/x STZ2
	.Screen/height DEI2 #01 SFT2 #0040 SUB2 .center/y STZ2
	( | begin. )
	;on-frame .Screen/vector DEO2

@on-frame ( -> )
	[ LIT &f $1 ] INCk ,&f STR
	DUP #01 AND ?{ POP BRK }
	#01 SFT .timer STZ
	( | clear )
	#0000 DUP2 .Screen/x DEO2
	.Screen/y DEO2
	[ LIT2 80 -Screen/pixel ] DEO
	( | draw )
	<draw-cube>
	BRK

@<draw-cube> ( frame -- )
	( | create box )
	#0800
	&>loop ( -- )
		STHk [ LIT2 00 -timer ] LDZ #00 STHkr INC #07 AND #60 SFT ADD2 #00ff AND2 ;table ADD2 LDA #01 SFT #00 .timer LDZ #00 STHkr #60 SFT ADD2 #00ff AND2 ;table ADD2 LDA #02 SFT #00 STHkr #62 SFT2 ADD2 .cube/v0 STHr DUP ADD ADD STZ2
		INC GTHk ?&>loop
	POP2
	( | vertices )
	#0800
	&>ver-loop ( -- )
		DUP DUP ADD LDZ2 <draw-vertex>
		INC GTHk ?&>ver-loop
	POP2
	( lines ) #0400
	&>line-loop ( -- )
		STHk .cube/v0 STHkr DUP ADD ADD .cube/v0 STHkr INC #03 AND DUP ADD ADD <draw-edge>
		.cube/v0 STHkr DUP ADD ADD .cube/v4 STHkr DUP ADD ADD <draw-edge>
		.cube/v4 STHkr DUP ADD ADD .cube/v4 STHr INC #03 AND DUP ADD ADD <draw-edge>
		INC GTHk ?&>line-loop
	POP2 JMP2r

@<draw-edge> ( a b -- )
	STH
	STH
	( ) #00 STHkr LDZ .center/x LDZ2 ADD2
	( ) #00 STHr INC LDZ .center/y LDZ2 ADD2
	( ) #00 STHkr LDZ .center/x LDZ2 ADD2
	( ) #00 STHr INC LDZ .center/y LDZ2 ADD2 #05 !<draw-line>

@<draw-vertex> ( x y -- )
	#00 SWP #0004 SUB2 .center/y LDZ2 ADD2 .Screen/y DEO2
	#00 SWP #0003 SUB2 .center/x LDZ2 ADD2 .Screen/x DEO2
	;&icn .Screen/addr DEO2
	[ LIT2 05 -Screen/sprite ] DEO
	JMP2r
	&icn [ 0000 387c 7c7c 3800 ]

@<draw-line> ( x1* y1* x2* y2* color -- )
	,&color STR
	,&y STR2
	,&x STR2
	,&y2 STR2
	,&x2 STR2
	,&x LDR2 ,&x2 LDR2 SUB2 abs2 ,&dx STR2
	#0000 ,&y LDR2 ,&y2 LDR2 SUB2 abs2 SUB2 ,&dy STR2
	#ffff [ LIT2 00 _&x2 ] LDR2 ,&x LDR2 lts2 DUP2 ADD2 ADD2 ,&sx STR2
	#ffff [ LIT2 00 _&y2 ] LDR2 ,&y LDR2 lts2 DUP2 ADD2 ADD2 ,&sy STR2
	[ LIT2 &dx $2 ] [ LIT2 &dy $2 ] ADD2 STH2
	&while ( -- )
	[ LIT2 &x2 $2 ] DUP2 .Screen/x DEO2
	[ LIT2 &x $2 ] EQU2 [ LIT2 &y2 $2 ] DUP2 .Screen/y DEO2
	[ LIT2 &y $2 ] EQU2 [ LIT2 &color $1 -Screen/pixel ] DEO
	AND ?&end
	STH2kr DUP2 ADD2 DUP2 ,&dy LDR2 lts2 ?&skipy
	STH2r ,&dy LDR2 ADD2 STH2
	,&x2 LDR2 [ LIT2 &sx $2 ] ADD2 ,&x2 STR2
	&skipy ( -- )
	,&dx LDR2 gts2 ?&while
	STH2r ,&dx LDR2 ADD2 STH2
	,&y2 LDR2 [ LIT2 &sy $2 ] ADD2 ,&y2 STR2
	!&while
	&end POP2r JMP2r

@abs2 ( a* -- f )
	DUP2 #0f SFT2 EQU ?{ #0000 SWP2 SUB2 }
	JMP2r

@lts2 ( a* b* -- f )
	#8000 STH2k ADD2 SWP2 STH2r ADD2 GTH2 JMP2r

@gts2 ( a* b* -- f )
	#8000 STH2k ADD2 SWP2 STH2r ADD2 LTH2 JMP2r

@table ( 256 xy )
	[
	f7f8 f9fa fbfc fcfd fefe ffff ffff ffff
	ffff ffff fffe fefd fcfc fbfa f9f8 f7f6
	f5f3 f2f0 efed ecea e8e6 e4e2 e0de dcda
	d8d5 d3d1 cecc c9c7 c4c1 bfbc b9b6 b3b0
	aeab a8a5 a29f 9c98 9592 8f8c 8986 8380
	7c79 7673 706d 6a67 6360 5d5a 5754 514f
	4c49 4643 403e 3b38 3633 312e 2c2a 2725
	2321 1f1d 1b19 1715 1312 100f 0d0c 0a09
	0807 0605 0403 0302 0101 0000 0000 0000
	0000 0000 0001 0102 0303 0405 0607 0809
	0a0c 0d0f 1012 1315 1719 1b1d 1f21 2325
	272a 2c2e 3133 3638 3b3e 4043 4649 4c4f
	5154 575a 5d60 6367 6a6d 7073 7679 7c7f
	8386 898c 8f92 9598 9c9f a2a5 a8ab aeb0
	b3b6 b9bc bfc1 c4c7 c9cc ced1 d3d5 d8da
	dcde e0e2 e4e6 e8ea eced eff0 f2f3 f5f6 ]

